{"version":3,"file":"ng-feedback.umd.js","sources":["ng://ng-feedback/lib/entity/feedback.ts","ng://ng-feedback/lib/entity/rectangle.ts","ng://ng-feedback/lib/feedback.service.ts","ng://ng-feedback/lib/feedback-dialog/feedback-dialog.component.ts","ng://ng-feedback/lib/feedback-toolbar/feedback-toolbar.component.ts","ng://ng-feedback/lib/feedback-rectangle/feedback-rectangle.component.ts","ng://ng-feedback/lib/feedback.directive.ts","ng://ng-feedback/lib/feedback.module.ts"],"sourcesContent":["export class Feedback {\n  public description: string;\n  public screenshot: string;\n}\n","export class Rectangle {\n  public startX: number;\n  public startY: number;\n  public width: number;\n  public height: number;\n  public color: string;\n  public windowScrollY: number = window.scrollY;\n  public windowScrollX: number = window.scrollX;\n}\n","import { Injectable } from '@angular/core';\nimport html2canvas from 'html2canvas';\nimport { Subject, Observable } from 'rxjs';\nimport { Feedback } from './entity/feedback';\n\n@Injectable()\nexport class FeedbackService {\n  public initialVariables: object = {};\n  public highlightedColor = 'yellow';\n  public hiddenColor = 'black';\n  private screenshotCanvasSource = new Subject<HTMLCanvasElement>();\n  public screenshotCanvas$: Observable<HTMLCanvasElement> = this.screenshotCanvasSource.asObservable();\n\n  private feedbackSource = new Subject<Feedback>();\n  public feedback$: Observable<Feedback> = this.feedbackSource.asObservable();\n\n  private isDraggingToolbarSource = new Subject<boolean>();\n  public isDraggingToolbar$: Observable<boolean> = this.isDraggingToolbarSource.asObservable();\n\n  public initScreenshotCanvas() {\n    const body = document.body;\n    html2canvas(body, {\n      logging: false,\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight,\n      x: document.documentElement.scrollLeft,\n      y: document.documentElement.scrollTop,\n      allowTaint : true\n    }).then(bodyCanvas => {\n      this.screenshotCanvasSource.next(bodyCanvas);\n    });\n  }\n\n  public setCanvas(canvas: HTMLCanvasElement): void {\n    this.screenshotCanvasSource.next(canvas);\n  }\n\n  public setFeedback(feedback: Feedback): void {\n    this.feedbackSource.next(feedback);\n  }\n\n  public setIsDraggingToolbar(isDragging: boolean): void {\n    this.isDraggingToolbarSource.next(isDragging);\n  }\n\n  public getImgEle(canvas): HTMLElement {\n    const img = canvas.toDataURL('image/png'),\n          imageEle = document.createElement('img');\n    imageEle.setAttribute('src', img);\n    Object.assign(imageEle.style, {\n      position: 'absolute',\n      top: '50%',\n      right: '0',\n      left: '0',\n      margin: '0 auto',\n      maxHeight: '100%',\n      maxWidth: '100%',\n      transform: 'translateY(-50%)'\n    });\n    return imageEle;\n  }\n\n  public hideBackDrop() {\n    const dialogBackDrop = document.getElementsByClassName('dialogBackDrop')[0] as HTMLElement;\n    dialogBackDrop.style.backgroundColor = 'initial';\n  }\n\n  public showBackDrop() {\n    const dialogBackDrop = document.getElementsByClassName('dialogBackDrop')[0] as HTMLElement;\n    if (!dialogBackDrop.getAttribute('data-html2canvas-ignore')) {\n      dialogBackDrop.setAttribute('data-html2canvas-ignore', 'true');\n    }\n    dialogBackDrop.style.backgroundColor = 'rgba(0, 0, 0, .288)';\n  }\n}\n","import { Component, AfterViewInit, ViewChild, ElementRef, ChangeDetectorRef, HostListener } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil, finalize, map, mergeMap } from 'rxjs/operators';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Feedback } from '../entity/feedback';\nimport { Rectangle } from '../entity/rectangle';\nimport { FeedbackService } from '../feedback.service';\n\n@Component({\n  selector: 'feedback-dialog',\n  templateUrl: './feedback-dialog.component.html',\n  styleUrls: ['./feedback-dialog.component.css']\n})\nexport class FeedbackDialogComponent implements AfterViewInit {\n  public showToolbar = false;\n  public vars: object = {};\n  public feedback = new Feedback();\n  public includeScreenshot: boolean = true;\n  public showSpinner = true;\n  public screenshotEle: HTMLElement;\n  public drawCanvas: HTMLCanvasElement;\n  public showToolbarTips: boolean = true;\n  @ViewChild('screenshotParent', { static: false })\n  public screenshotParent: ElementRef;\n  public drawColor: string = this.feedbackService.highlightedColor;\n  public rectangles: Rectangle[] = [];\n  private scrollWidth = document.documentElement.scrollWidth;\n  private scrollHeight = document.documentElement.scrollHeight;\n  private elCouldBeHighlighted = ['button', 'a', 'span', 'em', 'i', 'h1', 'h2', 'h3', 'h4',\n    'h5', 'h6', 'p', 'strong', 'small', 'sub', 'sup', 'b', 'time', 'img',\n    'video', 'input', 'label', 'select', 'textarea', 'article', 'summary', 'section'];\n  // the flag field 'isManuallyDrawRect' to solve conflict between manually draw and auto draw\n  private manuallyDrawRect$: Subscription;\n  private autoDrawRect$: Subscription;\n  public isDrawingRect: boolean = false;\n\n  constructor(public dialogRef: MatDialogRef<FeedbackDialogComponent>,\n              private feedbackService: FeedbackService,\n              private detector: ChangeDetectorRef,\n              private el: ElementRef) {\n    this.feedback = new Feedback();\n    this.feedback.description = '';\n    this.vars = this.feedbackService.initialVariables;\n  }\n\n  public ngAfterViewInit() {\n    this.feedbackService.screenshotCanvas$.subscribe((canvas) => {\n      this.showSpinner = false;\n      this.feedback.screenshot = canvas.toDataURL('image/png');\n      this.screenshotEle = this.feedbackService.getImgEle(canvas);\n      this.appendScreenshot();\n    });\n\n    this.feedbackService.isDraggingToolbar$.subscribe((isDragging) => {\n      if (isDragging) {\n        this.destroyCanvasListeners();\n      } else {\n        this.addCanvasListeners();\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((sendNow) => {\n      if (sendNow === true) {\n        this.feedbackService.setFeedback(this.feedback);\n      }\n    });\n    this.feedbackService.showBackDrop();\n  }\n\n  public expandDrawingBoard() {\n    this.showToolbar = true;\n    if (!this.drawCanvas) {\n      this.detector.detectChanges();\n      this.initBackgroundCanvas();\n      this.feedbackService.hideBackDrop();\n    }\n    this.addCanvasListeners();\n    this.el.nativeElement.appendChild(this.drawCanvas);\n    this.feedbackService.hideBackDrop();\n    console.log('expand the board');\n  }\n\n  @HostListener('document:keydown.escape', ['$event'])\n  public onEscapeKeyDownHandler(evt: KeyboardEvent) {\n    this.showToolbar = false;\n    this.includeScreenshot = true;\n    this.detector.detectChanges();\n    this.dialogRef.close('key down esc to close');\n  }\n\n  public manipulate(manipulation: string) {\n    if (manipulation === 'done') {\n      this.showToolbarTips = false;\n      this.showSpinner = true;\n      this.destroyCanvasListeners();\n      this.showToolbar = false;\n      this.detector.detectChanges();\n      this.feedbackService.initScreenshotCanvas();\n    } else {\n      this.startDraw(manipulation);\n    }\n  }\n\n  public startDraw(color: string) {\n    this.drawColor = color;\n  }\n\n  public isIncludeScreenshot() {\n    if (this.includeScreenshot) {\n      this.detector.detectChanges();\n      this.showSpinner = false;\n      this.appendScreenshot();\n      this.feedback.screenshot = this.screenshotEle.getAttribute('src');\n    } else {\n      delete this.feedback['screenshot'];\n      this.showSpinner = true;\n    }\n  }\n\n  private appendScreenshot() {\n    if (this.screenshotParent) { this.screenshotParent.nativeElement.appendChild(this.screenshotEle); }\n  }\n\n  private initBackgroundCanvas() {\n    this.drawCanvas = document.getElementById('draw-canvas') as HTMLCanvasElement;\n    // The canvas to draw, must use this way to initial the height and width\n    this.drawCanvas.style.height = this.scrollHeight + '';\n    this.drawCanvas.style.width = this.scrollWidth + '';\n    this.drawCanvas.height = this.scrollHeight;\n    this.drawCanvas.width = this.scrollWidth;\n    this.drawContainerRect();\n  }\n\n  private drawContainerRect() {\n    const drawContext = this.drawCanvas.getContext('2d'),\n      width = this.scrollWidth,\n      height = this.scrollHeight;\n    drawContext.beginPath();\n    drawContext.fillStyle = 'rgba(0,0,0,0.3)';\n    drawContext.clearRect(0, 0, width, height);\n    drawContext.fillRect(0, 0, width, height); // draw the rectangle\n  }\n\n  private drawRectangle(rect: Rectangle) {\n    const context = this.drawCanvas.getContext('2d');\n    context.lineJoin = 'round';\n    context.beginPath();\n    if (rect.color === this.feedbackService.hiddenColor) {\n      context.fillStyle = 'rgba(31, 31, 31, 0.75)';\n      context.fillRect(rect.startX, rect.startY, rect.width, rect.height);\n      context.rect(rect.startX, rect.startY, rect.width, rect.height);\n    } else {\n      context.clearRect(rect.startX, rect.startY, rect.width, rect.height);\n      context.lineWidth = 5;\n      context.strokeStyle = rect.color;\n      context.rect(rect.startX, rect.startY, rect.width, rect.height);\n      context.stroke();\n      context.clearRect(rect.startX, rect.startY, rect.width, rect.height);\n      this.rectangles.forEach(tmpRect => {\n        if (tmpRect.color === this.feedbackService.highlightedColor) {\n          context.clearRect(tmpRect.startX, tmpRect.startY, tmpRect.width, tmpRect.height);\n        }\n      });\n    }\n  }\n\n  private addCanvasListeners(): void {\n    const mouseUp = fromEvent(document.documentElement, 'mouseup'),\n          mouseMove = fromEvent(document.documentElement, 'mousemove'),\n          mouseDown = fromEvent(document.documentElement, 'mousedown'),\n          scroll = fromEvent(window, 'scroll');\n\n    this.manuallyDrawRect(mouseDown, mouseMove, mouseUp);\n    this.autoDrawRect(mouseMove);\n    this.changeRectPosition(scroll);\n  }\n\n  private changeRectPosition(scroll: Observable<Event>) {\n    scroll.subscribe(\n      event => {\n        const currentWindowScrollX = window.scrollX,\n              currentWindowScrollY = window.scrollY;\n        this.rectangles.forEach(rect => {\n          rect.startY = rect.startY - (currentWindowScrollY - rect.windowScrollY);\n          rect.startX = rect.startX - (currentWindowScrollX - rect.windowScrollX);\n          rect.windowScrollY = currentWindowScrollY;\n          rect.windowScrollX = currentWindowScrollX;\n        });\n        this.drawPersistCanvasRectangles();\n      },\n      error => console.error(error)\n    );\n  }\n\n  private destroyCanvasListeners(): void {\n    if (this.manuallyDrawRect$) { this.manuallyDrawRect$.unsubscribe(); }\n    if (this.autoDrawRect$) { this.autoDrawRect$.unsubscribe(); }\n  }\n\n  private manuallyDrawRect(mouseDown: Observable<Event>, mouseMove: Observable<Event>, mouseUp: Observable<Event>): void {\n    const mouseDrag = mouseDown.pipe(mergeMap((mouseDownEvent: MouseEvent) => {\n      if (this.showToolbarTips) { this.showToolbarTips = false; }\n      this.autoDrawRect$.unsubscribe();\n      this.isDrawingRect = true;\n\n      const newRectangle = new Rectangle();\n      newRectangle.startX = mouseDownEvent.clientX;\n      newRectangle.startY = mouseDownEvent.clientY;\n      newRectangle.color = this.drawColor;\n\n      return mouseMove.pipe(\n        map((mouseMoveEvent: MouseEvent) => {\n          newRectangle.width = mouseMoveEvent.clientX - mouseDownEvent.clientX;\n          newRectangle.height = mouseMoveEvent.clientY - mouseDownEvent.clientY;\n          return newRectangle;\n        }),\n        finalize(() => {\n          // click to draw rectangle\n          if (newRectangle.width === undefined || newRectangle.height === undefined ||\n            newRectangle.width === 0 || newRectangle.height === 0) {\n            const rect = this.drawTempCanvasRectangle(mouseDownEvent);\n            if (rect) { this.rectangles.push(rect); }\n          } else {\n          // drag to draw rectangle\n            if (newRectangle.height < 0) {\n              newRectangle.startY = newRectangle.startY + newRectangle.height;\n              newRectangle.height = Math.abs(newRectangle.height);\n            }\n            if (newRectangle.width < 0) {\n              newRectangle.startX = newRectangle.startX + newRectangle.width;\n              newRectangle.width = Math.abs(newRectangle.width);\n            }\n            this.rectangles.push(newRectangle);\n          }\n          this.drawPersistCanvasRectangles();\n          this.autoDrawRect(mouseMove);\n          this.isDrawingRect = false;\n        }),\n        takeUntil(mouseUp));\n    }));\n\n    this.manuallyDrawRect$ = mouseDrag.subscribe(\n      (rec) => {\n        this.drawPersistCanvasRectangles();\n        this.drawRectangle(rec);\n      }\n    );\n  }\n\n  private autoDrawRect(mouseMove: Observable<Event>): void {\n    this.autoDrawRect$ = mouseMove.subscribe({\n      next: (mouseMoveEvent: MouseEvent) => {\n        this.drawPersistCanvasRectangles();\n        this.drawTempCanvasRectangle(mouseMoveEvent);\n      },\n      error: err => console.error('something wrong occurred: ' + err),\n    });\n  }\n\n  private drawPersistCanvasRectangles() {\n    this.drawContainerRect();\n    this.rectangles.forEach(tmpRect => {\n      this.drawRectangle(tmpRect);\n    });\n  }\n\n  private drawTempCanvasRectangle(event: MouseEvent) {\n    let rectangle: Rectangle = null;\n    const clientX = event.clientX,\n          clientY = event.clientY,\n          els = document.elementsFromPoint(clientX, clientY),\n          el = els[2];\n    if ((!this.isExcludeRect(els)) && el && this.elCouldBeHighlighted.indexOf(el.nodeName.toLowerCase()) > -1) {\n      rectangle = new Rectangle();\n      const rect = el.getBoundingClientRect();\n      this.drawCanvas.style.cursor = 'pointer';\n\n      Object.assign(rectangle, {\n        startX: rect.left,\n        startY: rect.top,\n        width: rect.width,\n        height: rect.height,\n        color: this.drawColor\n      });\n      this.drawRectangle(rectangle);\n    } else {\n      this.drawCanvas.style.cursor = 'crosshair';\n    }\n    return rectangle;\n  }\n\n  public closeRect(index: number) {\n    this.rectangles.splice(index, 1);\n    this.drawPersistCanvasRectangles();\n  }\n\n  private isExcludeRect(elements: Element[]): boolean {\n    const result = elements.some( el => {\n      return el.getAttribute('exclude-rect') === 'true';\n    });\n    return result;\n  }\n}\n","import { Component, ElementRef, Input, Output, EventEmitter, AfterViewInit, ViewChild, OnChanges } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { takeUntil, finalize, map, mergeMap } from 'rxjs/operators';\nimport { FeedbackService } from '../feedback.service';\n\n@Component({\n  selector: 'feedback-toolbar',\n  templateUrl: './feedback-toolbar.component.html',\n  styleUrls: ['./feedback-toolbar.component.css']\n})\nexport class FeedbackToolbarComponent implements AfterViewInit, OnChanges {\n  @Input()\n  public drawColor: string;\n  @Output()\n  public manipulate = new EventEmitter<string>();\n  public disableToolbarTips = false;\n  @ViewChild('toggleMove', { static: true })\n  private toggleMoveBtn: ElementRef;\n  public isSwitch = false;\n  public isDragging = false;\n  public vars: object = {};\n\n  constructor(public el: ElementRef, private feedbackService: FeedbackService) {\n    this.vars = feedbackService.initialVariables;\n  }\n\n  public ngAfterViewInit() {\n    const elStyle = this.el.nativeElement.style;\n    elStyle.position = 'absolute';\n    elStyle.left = '43%';\n    elStyle.top = '60%';\n    this.addDragListenerOnMoveBtn();\n  }\n\n  public ngOnChanges() {\n    this.isSwitch = this.drawColor !== this.feedbackService.highlightedColor;\n  }\n\n  public done() {\n    this.manipulate.emit('done');\n  }\n\n  public toggleHighlight() {\n    this.isSwitch = false;\n    this.manipulate.emit(this.feedbackService.highlightedColor);\n  }\n\n  public toggleHide() {\n    this.isSwitch = true;\n    this.manipulate.emit(this.feedbackService.hiddenColor);\n  }\n\n  public addDragListenerOnMoveBtn() {\n    const mouseUp = fromEvent(this.toggleMoveBtn.nativeElement, 'mouseup');\n    const mouseMove = fromEvent(document.documentElement, 'mousemove');\n    const mouseDown = fromEvent(this.toggleMoveBtn.nativeElement, 'mousedown');\n    const mouseDrag = mouseDown.pipe(mergeMap((md: MouseEvent) => {\n      this.feedbackService.setIsDraggingToolbar(true);\n      const startX = md.offsetX;\n      const startY = md.offsetY;\n      this.disableToolbarTips = true;\n      this.isDragging = true;\n      // Calculate dif with mousemove until mouseup\n      return mouseMove.pipe(\n        map((mm: MouseEvent) => {\n          mm.preventDefault();\n          return {\n            left: mm.clientX - startX,\n            top: mm.clientY - startY\n          };\n        }),\n        finalize(() => {\n          this.isDragging = false;\n          this.disableToolbarTips = false;\n          this.feedbackService.setIsDraggingToolbar(false);\n        }),\n        takeUntil(mouseUp));\n    }));\n    mouseDrag.subscribe(\n      (pos) => {\n        this.el.nativeElement.style.left = pos.left + 'px';\n        this.el.nativeElement.style.top = pos.top + 'px';\n      });\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { Rectangle } from '../entity/rectangle';\nimport { FeedbackService } from '../feedback.service';\n\n@Component({\n  selector: 'feedback-rectangle',\n  templateUrl: './feedback-rectangle.component.html',\n  styleUrls: ['./feedback-rectangle.component.css']\n})\nexport class FeedbackRectangleComponent {\n  @Input()\n  public rectangle: Rectangle;\n  @Input()\n  public noHover: boolean;\n  @Output()\n  public close = new EventEmitter<boolean>();\n  public showCloseTag: boolean = false;\n\n  constructor(public feedbackService: FeedbackService) {\n  }\n\n  @HostListener('mouseenter')\n  public onMouseEnter(): void {\n    this.showCloseTag = this.noHover === false;\n  }\n\n  @HostListener('mouseleave')\n  public onMouseLeave(): void {\n    this.showCloseTag = false;\n  }\n\n  public onClose(): void {\n    this.close.emit();\n  }\n}\n","import { Directive, HostListener, EventEmitter, Output, Input, OnInit } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FeedbackDialogComponent } from './feedback-dialog/feedback-dialog.component';\nimport { FeedbackService } from './feedback.service';\n\n@Directive({selector: '[feedback]'})\nexport class FeedbackDirective implements OnInit {\n  private overlay: Overlay;\n  @Input() title: string = 'Send feedback';\n  @Input() placeholder: string = 'Describe your issue or share your ideas';\n  @Input() editTip = 'Click to highlight or hide info';\n  @Input() checkboxLabel = 'Include screenshot';\n  @Input() cancelLabel = 'CANCEL';\n  @Input() sendLabel = 'SEND';\n  @Input() moveToolbarTip = 'move toolbar';\n  @Input() drawRectTip = 'Draw using yellow to highlight issues or black to hide sensitive info';\n  @Input() highlightTip = 'highlight issues';\n  @Input() hideTip = 'hide sensitive info';\n  @Input() editDoneLabel = 'DONE';\n  @Output() public send = new EventEmitter<object>();\n\n  public constructor(private dialogRef: MatDialog, private feedbackService: FeedbackService, overlay: Overlay) {\n    this.feedbackService.feedback$.subscribe(\n      (feedback) => {\n        this.send.emit(feedback);\n      }\n    );\n    this.overlay = overlay;\n  }\n\n  @HostListener('click')\n  public onClick() {\n    this.openFeedbackDialog();\n  }\n\n  public openFeedbackDialog() {\n    this.feedbackService.initScreenshotCanvas();\n    this.dialogRef.open(FeedbackDialogComponent, {\n      panelClass: 'feedbackDialog',\n      backdropClass: 'dialogBackDrop',\n      disableClose: true,\n      height: 'auto',\n      width: 'auto',\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\n    });\n  }\n\n  ngOnInit(): void {\n    this.feedbackService.initialVariables = {\n      title: this.title,\n      placeholder: this.placeholder,\n      editTip: this.editTip,\n      checkboxLabel: this.checkboxLabel,\n      cancelLabel: this.cancelLabel,\n      sendLabel: this.sendLabel,\n      moveToolbarTip: this.moveToolbarTip,\n      drawRectTip: this.drawRectTip,\n      highlightTip: this.highlightTip,\n      hideTip: this.hideTip,\n      editDoneLabel: this.editDoneLabel\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FeedbackDialogComponent } from './feedback-dialog/feedback-dialog.component';\nimport { FeedbackToolbarComponent } from './feedback-toolbar/feedback-toolbar.component';\nimport { FeedbackRectangleComponent } from './feedback-rectangle/feedback-rectangle.component';\nimport { FeedbackService } from './feedback.service';\nimport { FeedbackDirective } from './feedback.directive';\n\n@NgModule({\n  declarations: [\n    FeedbackDialogComponent,\n    FeedbackToolbarComponent,\n    FeedbackRectangleComponent,\n    FeedbackDirective\n  ],\n  imports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatTooltipModule,\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    FeedbackDirective\n  ],\n  entryComponents: [\n    FeedbackDialogComponent\n  ],\n  providers: [\n    FeedbackService\n  ]\n})\nexport class FeedbackModule {\n}\n"],"names":["Subject","Injectable","fromEvent","mergeMap","map","finalize","takeUntil","Component","MatDialogRef","ChangeDetectorRef","ElementRef","ViewChild","HostListener","EventEmitter","Input","Output","Directive","MatDialog","Overlay","NgModule","MatDialogModule","MatButtonModule","MatIconModule","MatInputModule","MatTooltipModule","CommonModule","FormsModule","MatCheckboxModule","MatProgressSpinnerModule"],"mappings":"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"}